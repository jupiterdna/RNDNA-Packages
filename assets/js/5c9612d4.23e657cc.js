"use strict";(self.webpackChunkweb_docs=self.webpackChunkweb_docs||[]).push([[1139],{6167:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>x,frontMatter:()=>n,metadata:()=>i,toc:()=>l});var c=s(1085),o=s(1184),r=s(4506);const n={id:"checkbox-group",title:"Checkbox Group"},d="Checkbox Group",i={id:"components/checkbox-group",title:"Checkbox Group",description:"Checkbox Group is a higher-level component that manages a group of checkbox components together. It provides an interface for selecting multiple options from a list of choices and handles the state and behavior of the checkboxes as a group.",source:"@site/docs/components/Checkbox.Group.mdx",sourceDirName:"components",slug:"/components/checkbox-group",permalink:"/https://jupiterdna.github.io/RNDNA-Packages/docs/components/checkbox-group",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/Checkbox.Group.mdx",tags:[],version:"current",frontMatter:{id:"checkbox-group",title:"Checkbox Group"},sidebar:"docs",previous:{title:"Checkbox",permalink:"/https://jupiterdna.github.io/RNDNA-Packages/docs/components/checkbox"},next:{title:"Chip",permalink:"/https://jupiterdna.github.io/RNDNA-Packages/docs/components/chip"}},h={},l=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2}];function a(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.h1,{id:"checkbox-group",children:"Checkbox Group"}),"\n",(0,c.jsx)(t.p,{children:"Checkbox Group is a higher-level component that manages a group of checkbox components together. It provides an interface for selecting multiple options from a list of choices and handles the state and behavior of the checkboxes as a group."}),"\n",(0,c.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,c.jsxs)("div",{class:"row inline-flex-center items-center",children:[(0,c.jsx)("div",{class:"col col--3",children:(0,c.jsx)("h4",{children:"Import"})}),(0,c.jsx)("div",{class:"col col--9",children:(0,c.jsx)(r.A,{children:"import { DNACheckboxGroup } from '@rndna/checkbox';"})})]}),"\n",(0,c.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,c.jsx)("div",{class:"table-responsive",children:(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Name"}),(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Default"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"testID"})}),(0,c.jsx)(t.td,{children:"String"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"Undefined"})}),(0,c.jsx)(t.td,{children:"Property to be used for testing"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"label"})}),(0,c.jsx)(t.td,{children:"String"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"Undefined"})}),(0,c.jsx)(t.td,{children:"Property that defines the label of the option."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"disabled"})}),(0,c.jsx)(t.td,{children:"boolean"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"false"})}),(0,c.jsx)(t.td,{children:"Property that defines the label of the option."})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"orientation"})}),(0,c.jsxs)(t.td,{children:[(0,c.jsx)(t.code,{children:"horizontal"}),", ",(0,c.jsx)(t.code,{children:"vertical"})]}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"horizontal"})}),(0,c.jsx)(t.td,{children:"The property that aligns the elements of the components"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"required"})}),(0,c.jsx)(t.td,{children:"boolean"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"false"})}),(0,c.jsx)(t.td,{children:"Property that defines the size of the component or a selection"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"assistiveText"})}),(0,c.jsx)(t.td,{children:"assistiveTextType"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"undefined"})}),(0,c.jsx)(t.td,{children:"Display any assistive object or array of messages under the component (e.g. Warning or Error, etc.)"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"children"})}),(0,c.jsx)(t.td,{children:"childrenType"}),(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"undefined"})}),(0,c.jsx)(t.td,{children:"Property that accept react node as children of radio group"})]})]})]})})]})}function x(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}}}]);