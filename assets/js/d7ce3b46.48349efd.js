"use strict";(self.webpackChunkweb_docs=self.webpackChunkweb_docs||[]).push([[3193],{3310:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>x,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var d=s(1085),i=s(1184),n=s(4506);const r={id:"avatar-with-status",title:"Avatar With Status"},a="Avatar With Status",c={id:"components/avatar-with-status",title:"Avatar With Status",description:'Avatar with status component  is similar to the "Avatar with Badge" component, but instead of displaying a numerical badge value, it typically displays a status indicator associated with the avatar. This status indicator could represent various states such as online, offline, busy, away, etc. It\'s commonly used in messaging applications, social media platforms, or any application where users need to know the availability or status of other users.',source:"@site/docs/components/Avatar.WithStatus.mdx",sourceDirName:"components",slug:"/components/avatar-with-status",permalink:"/docs/components/avatar-with-status",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/Avatar.WithStatus.mdx",tags:[],version:"current",frontMatter:{id:"avatar-with-status",title:"Avatar With Status"},sidebar:"docs",previous:{title:"Avatar",permalink:"/docs/components/avatar"},next:{title:"Avatar With Badge",permalink:"/docs/components/avatar-with-badge"}},o={},l=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.h1,{id:"avatar-with-status",children:"Avatar With Status"}),"\n",(0,d.jsx)(t.p,{children:'Avatar with status component  is similar to the "Avatar with Badge" component, but instead of displaying a numerical badge value, it typically displays a status indicator associated with the avatar. This status indicator could represent various states such as online, offline, busy, away, etc. It\'s commonly used in messaging applications, social media platforms, or any application where users need to know the availability or status of other users.'}),"\n",(0,d.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,d.jsxs)("div",{class:"row inline-flex-center items-center",children:[(0,d.jsx)("div",{class:"col col--3",children:(0,d.jsx)("h4",{children:"Import"})}),(0,d.jsx)("div",{class:"col col--9",children:(0,d.jsx)(n.A,{children:"import { DNAAvatarWithStatus } from '@rndna/avatar';"})})]}),"\n",(0,d.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,d.jsx)("div",{class:"table-responsive",children:(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Name"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Default"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"testID"})}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Undefined"})}),(0,d.jsx)(t.td,{children:"Property to be used for testing"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"name"})}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Undefined"})}),(0,d.jsx)(t.td,{children:"Property that defines the full name of the avatar."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"imageSource"})}),(0,d.jsx)(t.td,{children:"string / ImageSrc"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"undefined"})}),(0,d.jsx)(t.td,{children:"Property that defines the source URL of the image/element to be used."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"size"})}),(0,d.jsxs)(t.td,{children:["SizeProps ",(0,d.jsx)(t.code,{children:'( "xs","sm","md","lg", "xl")'})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"md"})}),(0,d.jsx)(t.td,{children:"Property that defines the size of the component."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"borderRadius"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:'("squared", "soft_edged", "rounded")'})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"undefined"})}),(0,d.jsx)(t.td,{children:"Property that defines the border dimensions of the component."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"color"})}),(0,d.jsxs)(t.td,{children:["colorProps ",(0,d.jsx)(t.code,{children:'("primary", "secondary","info", "success", "warning", "danger", "default")'})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"default"})}),(0,d.jsx)(t.td,{children:"Property that changes theme of the component, i.e. background and text color,"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"alt"})}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"undefined"})}),(0,d.jsx)(t.td,{children:"Property that defines the alternative text of the image in the avatar."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"icon"})}),(0,d.jsx)(t.td,{children:"React.JSX.Element"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"undefined"})}),(0,d.jsx)(t.td,{children:"Property that enables user to select icon from icon library."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"onPress"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"(event: GestureResponderEvent) => void"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"undefined"})}),(0,d.jsx)(t.td,{children:"Handler when the component is clicked."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"status"})}),(0,d.jsx)(t.td,{children:"IWithStatusType"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"undefined"})}),(0,d.jsx)(t.td,{children:'Property that defines status of the avatar where it will be "online" , "offline" , "inactive" , "busy" , undefined;'})]})]})]})})]})}function x(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}}}]);