"use strict";(self.webpackChunkweb_docs=self.webpackChunkweb_docs||[]).push([[7555],{8191:(e,t,d)=>{d.r(t),d.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>x,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=d(1085),s=d(1184),n=d(4506);const i={id:"avatar-with-badge",title:"Avatar With Badge"},c="Avatar With Badge",a={id:"components/avatar-with-badge",title:"Avatar With Badge",description:"Avatar with badge component typically refers to a user interface element that combines an avatar (profile picture or icon) with a badge, which is usually a small visual indicator such as a colored dot or a number. This type of component is commonly used in applications to display user profiles, notifications, or status indicators.",source:"@site/docs/components/Avatar.WithBadge.mdx",sourceDirName:"components",slug:"/components/avatar-with-badge",permalink:"/docs/components/avatar-with-badge",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/Avatar.WithBadge.mdx",tags:[],version:"current",frontMatter:{id:"avatar-with-badge",title:"Avatar With Badge"},sidebar:"docs",previous:{title:"Avatar With Status",permalink:"/docs/components/avatar-with-status"},next:{title:"Badge",permalink:"/docs/components/badge"}},o={},l=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"avatar-with-badge",children:"Avatar With Badge"}),"\n",(0,r.jsx)(t.p,{children:"Avatar with badge component typically refers to a user interface element that combines an avatar (profile picture or icon) with a badge, which is usually a small visual indicator such as a colored dot or a number. This type of component is commonly used in applications to display user profiles, notifications, or status indicators."}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)("div",{class:"row inline-flex-center items-center",children:[(0,r.jsx)("div",{class:"col col--3",children:(0,r.jsx)("h4",{children:"Import"})}),(0,r.jsx)("div",{class:"col col--9",children:(0,r.jsx)(n.A,{children:"import { DNAAvatarWithBadge } from '@rndna/avatar';"})})]}),"\n",(0,r.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,r.jsx)("div",{class:"table-responsive",children:(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Default"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"testID"})}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Undefined"})}),(0,r.jsx)(t.td,{children:"Property to be used for testing"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"name"})}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Undefined"})}),(0,r.jsx)(t.td,{children:"Property that defines the full name of the avatar."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"imageSource"})}),(0,r.jsx)(t.td,{children:"string / ImageSrc"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsx)(t.td,{children:"Property that defines the source URL of the image/element to be used."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"size"})}),(0,r.jsxs)(t.td,{children:["SizeProps ",(0,r.jsx)(t.code,{children:'( "xs","sm","md","lg", "xl")'})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"md"})}),(0,r.jsx)(t.td,{children:"Property that defines the size of the component."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"borderRadius"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:'("squared", "soft_edged", "rounded")'})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsx)(t.td,{children:"Property that defines the border dimensions of the component."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"color"})}),(0,r.jsxs)(t.td,{children:["colorProps ",(0,r.jsx)(t.code,{children:'("primary", "secondary","info", "success", "warning", "danger", "default")'})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"default"})}),(0,r.jsx)(t.td,{children:"Property that changes theme of the component, i.e. background and text color,"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"alt"})}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsx)(t.td,{children:"Property that defines the alternative text of the image in the avatar."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"icon"})}),(0,r.jsx)(t.td,{children:"React.JSX.Element"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsx)(t.td,{children:"Property that enables user to select icon from icon library."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"onPress"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"(event: GestureResponderEvent) => void"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsx)(t.td,{children:"Handler when the component is clicked."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"badge"})}),(0,r.jsxs)(t.td,{children:["IWithBadgeType ",(0,r.jsx)(t.code,{children:"{color?: colorProps, value?: string}"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"undefined"})}),(0,r.jsx)(t.td,{children:"Property that defines badge of the avatar"})]})]})]})})]})}function x(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);